https://leafletjs.com/examples/geojson/
https://leafletjs.com/examples/choropleth/
https://www.texastribune.org/library/data/us-senate-runoff-results-map/


var geojsonFeature = {
    "type": "Feature",
    "properties": {
        "name": "Coors Field",
        "amenity": "Baseball Stadium",
        "popupContent": "This is where the Rockies play!"
    },
    "geometry": {
        "type": "Point",
        "coordinates": [-104.99404, 39.75621]
    }
};


var map = L.map('map').setView([37.8, -96], 4);

var tiles = L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
    maxZoom: 19,
    attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
}).addTo(map);

L.geoJson(geojsonFeature).addTo(map);





//Pour afficher les resultats de la zone(au cas ou)

function onEachFeature(feature, layer) {
    // does this feature have a property named popupContent?
    if (feature.properties && feature.properties.popupContent) {
        layer.bindPopup(feature.properties.popupContent);
    }
}

var geojsonFeature = {
    "type": "Feature",
    "properties": {
        "name": "Coors Field",
        "amenity": "Baseball Stadium",
        "popupContent": "This is where the Rockies play!"
    },
    "geometry": {
        "type": "Point",
        "coordinates": [-104.99404, 39.75621]
    }
};

L.geoJSON(geojsonFeature, {
    onEachFeature: onEachFeature
}).addTo(map);

['#e5f5f9','#99d8c9','#2ca25f']

























import React from "react";
import { MapContainer, TileLayer, GeoJSON } from "react-leaflet";
import "leaflet/dist/leaflet.css";
import { useGlobalContext } from "@/app/context/globalContext";

function Mapbox() {
  const { forecast } = useGlobalContext(); // Vos coordonn√©es

  const activeCityCoords = forecast?.coord;

  if (!forecast || !forecast.coord || !activeCityCoords) {
    return (
      <div>
        <h1>Loading...</h1>
      </div>
    );
  }

  const geojsonFeatures = [
    {
      type: "Feature",
      properties: {
        name: "Coors Field",
        amenity: "Baseball Stadium",
        popupContent: "This is where the Rockies play!",
      },
      geometry: {
        type: "Point",
        coordinates: [3.864217556071893, 11.551995201269344],
      },
    },
    {
      type: "Feature",
      properties: {
        name: "Example Location 1",
        amenity: "Park",
        popupContent: "A beautiful park!",
      },
      geometry: {
        type: "Point",
        coordinates: [3.864217556071893, 11.551995201269344],
      },
    },
    {
      type: "Feature",
      properties: {
        name: "Example Location 2",
        amenity: "Restaurant",
        popupContent: "Great restaurant with amazing food!",
      },
      geometry: {
        type: "Point",
        coordinates: [3.864217556071893, 11.551995201269344],
      },
    },
  ];

  function getColor(d) {
    return d === "Park"
      ? "#800026"
      : d === "Restaurant"
      ? "#BD0026"
      : d === "Point"
      ? "#E31A1C"
      : "#FFEDA0";
  }

  function style(feature) {
    return {
      fillColor: getColor(feature.properties.amenity),
      weight: 2,
      opacity: 1,
      color: "white",
      dashArray: "3",
      fillOpacity: 0.7,
    };
  }

  return (
    <div className="flex-1 border rounded-lg w-full h-full">
      <MapContainer
        center={[37.8, -96]}
        zoom={4}
        style={{ height: "400px", width: "100%" }}
      >
        <TileLayer
          url="https://tile.openstreetmap.org/{z}/{x}/{y}.png"
          maxZoom={19}
          attribution='&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
        />
        {geojsonFeatures.map((feature, index) => (
          <GeoJSON key={index} data={feature} style={style} />
        ))}
      </MapContainer>
    </div>
  );
}

export default Mapbox;
